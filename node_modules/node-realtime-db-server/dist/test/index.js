'use strict';

var _http = require('http');

require('babel-polyfill');

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _ = require('../');

var _2 = _interopRequireDefault(_);

var _timers = require('timers');

var _operations = require('../operations');

var _operations2 = _interopRequireDefault(_operations);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var app = (0, _express2.default)();
var http = (0, _http.Server)(app);

var _rtdb = (0, _2.default)(http, {}, {
  initalData: {
    a: 1,
    b: 'zz'
  }
}),
    db = _rtdb.db;

app.get('/', function (req, res) {
  res.send('<h1>Hello world</h1>');
});

http.listen(3000, function () {
  console.log('listening on *:3000');
});

(0, _timers.setTimeout)(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = console;
          _context.next = 3;
          return db.get('a');

        case 3:
          _context.t1 = _context.sent;
          _context.t2 = '\'a\'=' + _context.t1;

          _context.t0.log.call(_context.t0, _context.t2);

          _context.next = 8;
          return db.set('c.d.e', 5);

        case 8:
          _context.t3 = console;
          _context.t4 = JSON;
          _context.next = 12;
          return db.get('c.d');

        case 12:
          _context.t5 = _context.sent;
          _context.t6 = _context.t4.stringify.call(_context.t4, _context.t5);
          _context.t7 = '\'c.d\'=' + _context.t6;

          _context.t3.log.call(_context.t3, _context.t7);

          _context.next = 18;
          return db.set('b', 2, _operations2.default.incr);

        case 18:
          _context.t8 = console;
          _context.t9 = JSON;
          _context.next = 22;
          return db.get('b');

        case 22:
          _context.t10 = _context.sent;
          _context.t11 = _context.t9.stringify.call(_context.t9, _context.t10);
          _context.t12 = '\'b\'=' + _context.t11;
          _context.t13 = _context.t12 + '(should be \'zz\')';

          _context.t8.log.call(_context.t8, _context.t13);

          _context.next = 29;
          return db.set('b', 2, _operations2.default.decr);

        case 29:
          _context.t14 = console;
          _context.t15 = JSON;
          _context.next = 33;
          return db.get('b');

        case 33:
          _context.t16 = _context.sent;
          _context.t17 = _context.t15.stringify.call(_context.t15, _context.t16);
          _context.t18 = '\'b\'=' + _context.t17;
          _context.t19 = _context.t18 + '(should be \'zz\')';

          _context.t14.log.call(_context.t14, _context.t19);

          _context.next = 40;
          return db.set('a', 2, _operations2.default.incr);

        case 40:
          _context.t20 = console;
          _context.t21 = JSON;
          _context.next = 44;
          return db.get('a');

        case 44:
          _context.t22 = _context.sent;
          _context.t23 = _context.t21.stringify.call(_context.t21, _context.t22);
          _context.t24 = '\'a\'=' + _context.t23;
          _context.t25 = _context.t24 + '(should be 3)';

          _context.t20.log.call(_context.t20, _context.t25);

          _context.next = 51;
          return db.set('a', 5, _operations2.default.decr);

        case 51:
          _context.t26 = console;
          _context.t27 = JSON;
          _context.next = 55;
          return db.get('a');

        case 55:
          _context.t28 = _context.sent;
          _context.t29 = _context.t27.stringify.call(_context.t27, _context.t28);
          _context.t30 = '\'a\'=' + _context.t29;
          _context.t31 = _context.t30 + '(should be -2)';

          _context.t26.log.call(_context.t26, _context.t31);

          _context.next = 62;
          return db.set('a', 5, _operations2.default.push);

        case 62:
          _context.t32 = console;
          _context.t33 = JSON;
          _context.next = 66;
          return db.get('a');

        case 66:
          _context.t34 = _context.sent;
          _context.t35 = _context.t33.stringify.call(_context.t33, _context.t34);
          _context.t36 = '\'a\'=' + _context.t35;
          _context.t37 = _context.t36 + '(should be -2)';

          _context.t32.log.call(_context.t32, _context.t37);

          _context.next = 73;
          return db.set('a', 5, _operations2.default.unshift);

        case 73:
          _context.t38 = console;
          _context.t39 = JSON;
          _context.next = 77;
          return db.get('a');

        case 77:
          _context.t40 = _context.sent;
          _context.t41 = _context.t39.stringify.call(_context.t39, _context.t40);
          _context.t42 = '\'a\'=' + _context.t41;
          _context.t43 = _context.t42 + '(should be -2)';

          _context.t38.log.call(_context.t38, _context.t43);

          _context.next = 84;
          return db.set('a', [1, 2], _operations2.default.splice);

        case 84:
          _context.t44 = console;
          _context.t45 = JSON;
          _context.next = 88;
          return db.get('a');

        case 88:
          _context.t46 = _context.sent;
          _context.t47 = _context.t45.stringify.call(_context.t45, _context.t46);
          _context.t48 = '\'a\'=' + _context.t47;
          _context.t49 = _context.t48 + '(should be -2)';

          _context.t44.log.call(_context.t44, _context.t49);

          _context.next = 95;
          return db.set('x', 5, _operations2.default.push);

        case 95:
          _context.t50 = console;
          _context.t51 = JSON;
          _context.next = 99;
          return db.get('x');

        case 99:
          _context.t52 = _context.sent;
          _context.t53 = _context.t51.stringify.call(_context.t51, _context.t52);
          _context.t54 = '\'x\'=' + _context.t53;
          _context.t55 = _context.t54 + '(should be [5])';

          _context.t50.log.call(_context.t50, _context.t55);

          _context.next = 106;
          return db.set('y', 5, _operations2.default.unshift);

        case 106:
          _context.t56 = console;
          _context.t57 = JSON;
          _context.next = 110;
          return db.get('y');

        case 110:
          _context.t58 = _context.sent;
          _context.t59 = _context.t57.stringify.call(_context.t57, _context.t58);
          _context.t60 = '\'y\'=' + _context.t59;
          _context.t61 = _context.t60 + '(should be [5])';

          _context.t56.log.call(_context.t56, _context.t61);

          _context.next = 117;
          return db.set('z', [0, 0, 5, 6, 7, 8], _operations2.default.splice);

        case 117:
          _context.t62 = console;
          _context.t63 = JSON;
          _context.next = 121;
          return db.get('z');

        case 121:
          _context.t64 = _context.sent;
          _context.t65 = _context.t63.stringify.call(_context.t63, _context.t64);
          _context.t66 = '\'z\'=' + _context.t65;
          _context.t67 = _context.t66 + '(should be [5,6,7,8])';

          _context.t62.log.call(_context.t62, _context.t67);

          _context.t68 = console;
          _context.t69 = JSON;
          _context.next = 130;
          return db.get('z1');

        case 130:
          _context.t70 = _context.sent;
          _context.t71 = _context.t69.stringify.call(_context.t69, _context.t70);
          _context.t72 = '\'z1\'=' + _context.t71;
          _context.t73 = _context.t72 + '(should be undefined)';

          _context.t68.log.call(_context.t68, _context.t73);

          _context.next = 137;
          return db.set('z1', [0, 0, [5, 6]], _operations2.default.splice);

        case 137:
          _context.t74 = console;
          _context.t75 = JSON;
          _context.next = 141;
          return db.get('z1');

        case 141:
          _context.t76 = _context.sent;
          _context.t77 = _context.t75.stringify.call(_context.t75, _context.t76);
          _context.t78 = '\'z1\'=' + _context.t77;
          _context.t79 = _context.t78 + '(should be [[5,6]])';

          _context.t74.log.call(_context.t74, _context.t79);

          _context.next = 148;
          return db.set('x', 6, _operations2.default.push);

        case 148:
          _context.t80 = console;
          _context.t81 = JSON;
          _context.next = 152;
          return db.get('x');

        case 152:
          _context.t82 = _context.sent;
          _context.t83 = _context.t81.stringify.call(_context.t81, _context.t82);
          _context.t84 = '\'x\'=' + _context.t83;
          _context.t85 = _context.t84 + '(should be [5,6])';

          _context.t80.log.call(_context.t80, _context.t85);

          _context.next = 159;
          return db.set('y', 6, _operations2.default.unshift);

        case 159:
          _context.t86 = console;
          _context.t87 = JSON;
          _context.next = 163;
          return db.get('y');

        case 163:
          _context.t88 = _context.sent;
          _context.t89 = _context.t87.stringify.call(_context.t87, _context.t88);
          _context.t90 = '\'y\'=' + _context.t89;
          _context.t91 = _context.t90 + '(should be [6,5])';

          _context.t86.log.call(_context.t86, _context.t91);

          _context.next = 170;
          return db.set('z', [1, 2, 9, 10, 11], _operations2.default.splice);

        case 170:
          _context.t92 = console;
          _context.t93 = JSON;
          _context.next = 174;
          return db.get('z');

        case 174:
          _context.t94 = _context.sent;
          _context.t95 = _context.t93.stringify.call(_context.t93, _context.t94);
          _context.t96 = '\'z\'=' + _context.t95;
          _context.t97 = _context.t96 + '(should be [5,9,10,11,8])';

          _context.t92.log.call(_context.t92, _context.t97);

        case 179:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, undefined);
})), 1000);